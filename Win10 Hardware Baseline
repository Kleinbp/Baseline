#processor
$processor = Get-CimInstance Win32_Processor | Select-Object Name, Manufacturer, NumberOfCores, NumberOfLogicalProcessors, MaxClockSpeed
$processor_table = @{
"Processor" = @{
"Name" = $processor.Name
"Manufacturer" = $processor.Manufacturer 
"Core Count" = $processor.NumberOfCores 
"Logical Processor Count" = $processor.NumberOfLogicalProcessors
"Clock Speed" = ($processor.MaxClockSpeed / 1000)
}}

#Memory
$memory = Get-CimInstance Win32_PhysicalMemory | Select-Object Manufacturer, Speed, PartNumber
$memory_physical = [math]::Round((Get-CimInstance Win32_ComputerSystem).TotalPhysicalMemory / 1GB)
$mem_stick_count = $memory.Manufacturer.Count
$memory_table = @{
"Memory" = @{

"Memory Manufacturer" = $memory.Manufacturer
"Memory Speed" =  $memory.Speed
"Memory Capacity" = $memory_physical
"Part Number" = $memory.Partnumber.trim()
"Memory Stick Count" = $memory.Manufacturer.Count
}}

#storage
$physical_drive = Get-CimInstance Win32_DiskDrive | Select-Object Model, MediaType, Size, SerialNumber
$logical_drive = Get-CimInstance Win32_LogicalDisk | Select-Object DeviceID, VolumeName, Size, FreeSpace

#Individual drive storage size calculation & formatting
$drive_storage_size = @()
foreach ($item in $physical_drive.Size) {$number = $item/1e+12; $formatted = "{0:N4}" -f $number; $drive_storage_size += ("$formatted" + " TB")}

#Logical drive section
$logi_drives = @{}
foreach ($item in $logical_drive) { 
if ($item.DeviceID -eq "C:") {$item.VolumeName = "Local Disk"}
else {}

#Free Space Calc
$number = ($item.FreeSpace/1e+9); $formatted = "{0:N2}" -f $number; $free_space = ("$formatted" + " GB")

#Size Calc
$number = ($item.Size/1e+9); $formatted = "{0:N2}" -f $number; $size = ("$formatted" + " GB")


$logi_drives[$item.DeviceID] = $item.VolumeName, ($free_space), ($size)}

#Overall Storage table
$storage_table = @{
"Physical Drive(s)" = @{
"Drive Model(s)" = $physical_drive.model
"Physical Drive Count" = $physical_drive.model.Count
"Drive Size" = $drive_storage_size
"Drive Serial Number" = $physical_drive.serialnumber}
"Logical Drive(s)" = $logi_drives}


#mobo
Get-CimInstance Win32_BaseBoard | Select-Object Manufacturer, Product, SerialNumber


#bios
Get-CimInstance Win32_BIOS | Select-Object Manufacturer, SMBIOSBIOSVersion, ReleaseDate

#GPU
Get-CimInstance Win32_VideoController | Select-Object Name, AdapterRAM, DriverVersion

#network adapter 
Get-CimInstance Win32_NetworkAdapter | Where-Object { $_.NetEnabled -eq $true } | Select-Object Name, MACAddress, Speed
Get-NetIPAddress | Select-Object InterfaceAlias, IPAddress

#Powersupply
#Get-CimInstance Win32_Battery 

#monitor
#Get-CimInstance WmiMonitorID -Namespace root\wmi | Select-Object ManufacturerName, SerialNumberID, UserFriendlyName

#OS
Get-ComputerInfo | Select-Object CsName, OsName, OsArchitecture, WindowsVersion, WindowsBuildLabEx, CsModel, CsManufacturer

hostname


$dictionary = @{processor = }
